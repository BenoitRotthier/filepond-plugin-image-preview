/*
 * FilePondPluginImagePreview 1.0.3
 * Licensed under MIT, https://opensource.org/licenses/MIT
 * Please visit https://pqina.nl/filepond for details.
 */
const isPreviewableImage=e=>/^image/.test(e.type)&&!/svg/.test(e.type),transforms={1:()=>[1,0,0,1,0,0],2:e=>[-1,0,0,1,e,0],3:(e,t)=>[-1,0,0,-1,e,t],4:(e,t)=>[1,0,0,-1,0,t],5:[0,1,1,0,0,0],6:(e,t)=>[0,1,-1,0,t,0],7:(e,t)=>[0,-1,-1,0,t,e],8:e=>[0,-1,1,0,0,e]},fixImageOrientation=(e,t,a,i)=>{-1!==i&&e.transform(...transforms[i](t,a))},createPreviewImage=(e,t,a,i)=>{i>=5&&i<=8&&([t,a]=[a,t]);const r=document.createElement("canvas"),o=r.getContext("2d");return i>=5&&i<=8?(r.width=a,r.height=t):(r.width=t,r.height=a),o.save(),fixImageOrientation(o,t,a,i),o.drawImage(e,0,0,t,a),e.close&&e.close(),o.restore(),r},IMAGE_SCALE_SPRING_PROPS={type:"spring",stiffness:.5,damping:.45,mass:10},createImageView=e=>e.utils.createView({name:"image-preview",tag:"div",ignoreRect:!0,create:({root:e,props:t})=>{e.ref.clip=document.createElement("div"),e.element.appendChild(e.ref.clip)},write:e.utils.createRoute({DID_IMAGE_PREVIEW_LOAD:({root:e,props:t,action:a})=>{const{id:i}=t,r=e.query("GET_ITEM",{id:t.id}).getMetadata("crop")||{rect:{x:0,y:0,width:1,height:1},aspectRatio:a.height/a.width},o=window.devicePixelRatio,n=e.query("GET_IMAGE_PREVIEW_MAX_HEIGHT"),c=e.rect.inner.width,s=c,l=c*(a.height/a.width),d=createPreviewImage(a.data,s*o,l*o,a.orientation),p=Math.min(l,n),h=p/r.aspectRatio;e.ref.clip.style.cssText=`\n                    width:${h}px;\n                    height:${p}px;\n                `;const E=p/(l*r.rect.height),I=s*E,m=l*E,w=-r.rect.x*s*E,g=-r.rect.y*l*E;d.style.cssText=`\n                    width:${I}px;\n                    height:${m}px;\n                    transform:translate(${Math.round(w)}px, ${Math.round(g)}px);\n                `,e.ref.clip.appendChild(d),e.dispatch("DID_IMAGE_PREVIEW_DRAW",{id:i})}}),mixins:{styles:["scaleX","scaleY","opacity"],animations:{scaleX:IMAGE_SCALE_SPRING_PROPS,scaleY:IMAGE_SCALE_SPRING_PROPS,opacity:{type:"tween",duration:750}}}}),applyTemplate=(e,t)=>{t.width=e.width,t.height=e.height;t.getContext("2d").drawImage(e,0,0)},createImageOverlayView=e=>e.utils.createView({name:"image-preview-overlay",tag:"canvas",ignoreRect:!0,create:({root:e,props:t})=>{applyTemplate(t.template,e.element)},mixins:{styles:["opacity"],animations:{opacity:{type:"spring",mass:25}}}}),getImageSize=(e,t)=>{const a=new Image;a.onload=(()=>{t(a.naturalWidth,a.naturalHeight)}),a.src=e},fitToBounds=(e,t,a,i)=>{const r=Math.min(a/e,i/t);return{width:Math.round(e*r),height:Math.round(t*r)}},getImageScaledSize=(e,t,a,i)=>{getImageSize(e,(e,r)=>{const o=fitToBounds(e,r,t,a);i(o.width,o.height)})},BitmapWorker=function(){self.onmessage=(t=>{e(t.data.message,e=>{self.postMessage({id:t.data.id,message:e},[e])})});const e=(e,t)=>{fetch(e.file).then(e=>e.blob()).then(e=>createImageBitmap(e)).then(e=>t(e))}},easeInOutSine=e=>-.5*(Math.cos(Math.PI*e)-1),addGradientSteps=(e,t,a=1,i=easeInOutSine,r=10,o=0)=>{const n=1-o,c=t.join(",");for(let t=0;t<=r;t++){const s=t/r,l=o+n*s;e.addColorStop(l,`rgba(${c}, ${i(s)*a})`)}},drawTemplate=(e,t,a,i,r)=>{e.width=t,e.height=a;const o=e.getContext("2d"),n=.5*t,c=o.createRadialGradient(n,a+110,a-100,n,a+110,a+100);addGradientSteps(c,i,r,void 0,8,.4),o.save(),o.translate(.5*-t,0),o.scale(2,1),o.fillStyle=c,o.fillRect(0,0,t,a),o.restore()},width=500,height=200,overlayTemplateShadow=document.createElement("canvas"),overlayTemplateError=document.createElement("canvas"),overlayTemplateSuccess=document.createElement("canvas");drawTemplate(overlayTemplateShadow,500,200,[40,40,40],.85),drawTemplate(overlayTemplateError,500,200,[196,78,71],1),drawTemplate(overlayTemplateSuccess,500,200,[54,151,99],1);const createImageWrapperView=e=>{const t=createImageOverlayView(e),a=({root:e})=>{e.ref.overlayShadow.opacity=1,e.ref.overlayError.opacity=0,e.ref.overlaySuccess.opacity=0},i=({root:e})=>{e.ref.overlayShadow.opacity=.25,e.ref.overlayError.opacity=1};return e.utils.createView({name:"image-preview-wrapper",create:({root:a,props:i,dispatch:r})=>{const{id:o}=i,n=createImageView(e);a.ref.image=a.appendChildView(a.createChildView(n,{id:i.id,scaleX:1.25,scaleY:1.25,opacity:0})),a.ref.overlayShadow=a.appendChildView(a.createChildView(t,{template:overlayTemplateShadow,opacity:0})),a.ref.overlaySuccess=a.appendChildView(a.createChildView(t,{template:overlayTemplateSuccess,opacity:0})),a.ref.overlayError=a.appendChildView(a.createChildView(t,{template:overlayTemplateError,opacity:0})),a.dispatch("DID_IMAGE_PREVIEW_CONTAINER_CREATE",{id:o})},write:e.utils.createRoute({DID_IMAGE_PREVIEW_LOAD:({root:e,props:t})=>{e.ref.overlayShadow.opacity=1},DID_IMAGE_PREVIEW_DRAW:({root:e,props:t})=>{const{image:a}=e.ref;a.scaleX=1,a.scaleY=1,a.opacity=1},DID_IMAGE_PREVIEW_CONTAINER_CREATE:({root:t,props:a,action:i})=>{const{utils:r,views:o}=e,{createView:n,createWorker:c,loadImage:s}=r,{id:l}=a,d=t.query("GET_ITEM",l),p=URL.createObjectURL(d.file),h=(d.getMetadata("exif")||{}).orientation||-1,E=(e,t,a,i)=>{s(p).then(e=>{const r=document.createElement("canvas");r.width=t,r.height=a,r.getContext("2d").drawImage(e,0,0,t,a),I(r,t,a,i)})},I=(e,a,i,r)=>{URL.revokeObjectURL(p),t.dispatch("DID_IMAGE_PREVIEW_LOAD",{id:l,data:e,width:a,height:i,orientation:r})},m=t.rect.element.width*window.devicePixelRatio*2;getImageScaledSize(p,m,m,(e,a)=>{if(h>=5&&h<=8&&([e,a]=[a,e]),t.dispatch("DID_IMAGE_PREVIEW_CALCULATE_SIZE",{id:l,width:e,height:a}),"createImageBitmap"in window){const t=c(BitmapWorker);t.post({file:p},i=>{i?(I(i,e,a,h),t.terminate()):E(0,e,a,h)})}else E(0,e,a,h)})},DID_THROW_ITEM_LOAD_ERROR:i,DID_THROW_ITEM_PROCESSING_ERROR:i,DID_THROW_ITEM_INVALID:i,DID_COMPLETE_ITEM_PROCESSING:({root:e})=>{e.ref.overlayShadow.opacity=.25,e.ref.overlaySuccess.opacity=1},DID_START_ITEM_PROCESSING:a,DID_REVERT_ITEM_PROCESSING:a})})};var plugin$1=e=>{const{addFilter:t,utils:a}=e,{Type:i,createRoute:r}=a,o=createImageWrapperView(e);return t("CREATE_VIEW",t=>{const{is:a,view:i,query:n}=t;if(!a("file")||!n("GET_ALLOW_IMAGE_PREVIEW"))return;i.registerWriter(r({DID_LOAD_ITEM:({root:t,props:a,actions:r})=>{const{id:c}=a,s=n("GET_ITEM",c);if(!s)return;const l=s.file;if(!isPreviewableImage(l))return;const d="createImageBitmap"in(window||{}),p=n("GET_IMAGE_PREVIEW_MAX_FILE_SIZE");if(!d&&p&&l.size>p)return;const{panel:h}=e.views;t.ref.panel=i.appendChildView(i.createChildView(h)),t.ref.panel.element.classList.add("filepond--panel-item"),t.ref.panel.height=10,t.ref.imagePreview=i.appendChildView(i.createChildView(o,{id:c}))},DID_IMAGE_PREVIEW_CALCULATE_SIZE:({root:e,props:t,action:a})=>{const i=e.query("GET_IMAGE_PREVIEW_MAX_HEIGHT"),r=e.rect.element.width/a.width,o=Math.min(i,a.height*r);e.ref.imagePreview.element.style.cssText=`height:${o}px`,e.ref.panel.height=o}}))}),{options:{allowImagePreview:[!0,i.BOOLEAN],imagePreviewMaxHeight:[256,i.INT],imagePreviewMaxFileSize:[null,i.INT]}}};document&&document.dispatchEvent(new CustomEvent("FilePond:pluginloaded",{detail:plugin$1}));export default plugin$1;